apiVersion: v1
kind: Service
metadata:
  name: coworking
spec:
  type: LoadBalancer
  selector:
    service: coworking
  ports:
  - name: "5153"
    protocol: TCP
    port: 5153
    targetPort: 5153
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coworking
  labels:
    name: coworking
spec:
  replicas: 1
  selector:
    matchLabels:
      service: coworking
  template:
    metadata:
      labels:
        service: coworking
    spec:
      containers:
      - name: coworking
        image: 196895008979.dkr.ecr.us-east-1.amazonaws.com/analytics:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "2024Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: "/readiness_check"
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
        env:
        # - name: DB_HOST
        #   value: postgres-service-postgresql
        # - name: DB_PORT
        #   value: "5432"
        # - name: DB_USERNAME
        #   value: postgres
        # - name: DB_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: postgres-service-postgresql
        #       key: postgres-password
        # - name: DB_NAME
        #   value: postgres
        
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: POSTGRES_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: POSTGRES_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: env-configmap
              key: POSTGRES_DB
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRES_USERNAME 
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRES_PASSWORD
      restartPolicy: Always